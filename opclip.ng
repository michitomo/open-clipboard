/**
 * open-clipboard 0.1.0
 * shares your clipboard through you're local web server.
 *
 * because communicator can't share images.
 *
 * by hinox
 * * * * * */

Object.prototype.def = {
    title : "open-clipboard 0.1.0",

    img_dir_web : "img\\",
    /**
     * Main.scriptDirectory -> your web server document directory
     * */
    img_dir     : Main.scriptDirectory + "\\img\\",
    index_html  : Main.scriptDirectory + "\\index.html",
    header_html : Main.scriptDirectory + "\\header.html",
    footer_html : Main.scriptDirectory + "\\footer.html",
    text_file   : Main.scriptDirectory + "\\text.txt",

    timeout : 300000 // ms
};

Object.prototype.util = {
    img_dir     : (new Directory(this.def.img_dir)),
    index_html  : (new File(this.def.index_html)),
    header_html : (new File(this.def.header_html)),
    footer_html : (new File(this.def.footer_html)),
    text_file   : (new File(this.def.text_file)),

    clip : require("Clipboard").Clipboard,
    img  : require("Image").Image,

    fill_zero : function(num, digit){
        var str = "" + num;
        while(str.length < digit){
            str = "0" + str;
        }
        return str;
    },

    get_time : function(){
        var t = new Date();
        return this.util.fill_zero(t.getFullYear(),          4)
            + "-" + this.util.fill_zero(t.getMonth() + 1,    2)
            + "-" + this.util.fill_zero(t.getDate(),         2)
            + "_" + this.util.fill_zero(t.getHours(),        2)
            + "-" + this.util.fill_zero(t.getMinutes(),      2)
            + "-" + this.util.fill_zero(t.getSeconds(),      2)
            + "-" + this.util.fill_zero(t.getMilliseconds(), 3);
    },

    hsc : function(str){
        str = str.replace(/</g,"&lt;");
        str = str.replace(/>/g,"&gt;");
        str = str.replace(/&/g,"&amp;");
        str = str.replace(/"/g,"&quot;");
        str = str.replace(/'/g,"&#039;");
        return str ;
    }
};

var opclip = {
    main : function(){
        this.context_menu();
    },

    context_menu : function(){
        Main.createNotifyIcon();
        var that = this;
        Main.addCommands({
            "text+image" : function(){ that.on("both"); },
            "text"       : function(){ that.on("text"); },
            "image"      : function(){ that.on("image"); },
            "off"        : function(){ that.off(); },
            "exit"       : function(){ exit(); }
        });
        Main.addTexts({
            exit : "exit"
        });
        Main.notifyIcon.contextMenu.insert(
            null,
            "text+image",
            "text",
            "image",
            null,
            "off",
            null
        );
    },

    on : function(type){
        this.off();
        if(type === "both" || type === "text"){
            this.util.clip.observe("change", this.obs_text);
        }
        if(type === "both" || type === "image"){
            this.util.clip.observe("change", this.obs_img);
        }
    },

    off : function(){
        this.util.clip.unobserve("change", this.obs_text);
        this.util.clip.unobserve("change", this.obs_img);
    },

    obs_text : function(){
        var time = this.util.get_time();
        if(this.util.clip.hasFormat("text")){
            str = opclip.get_text_html(this.util.clip.text);
            Main.notifyIcon.showInfo(time, "TEXT shared");
        }
        opclip.create_page(str);
        opclip.clear();
    },

    obs_img : function(){
        var time = this.util.get_time();
        if(this.util.clip.hasFormat("image")){
            this.util.img_dir.create();
            var file = time + ".png";
            str = opclip.get_img_html(file);
            var img = this.util.clip.image;
            img.save(this.def.img_dir + file, {quality : 100});
            free(img);
            Main.notifyIcon.showInfo(time, "IMAGE shared");
        }
        opclip.create_page(str);
        opclip.clear();
    },

    get_text_html : function(text){
        return this.util.hsc(text);
    },

    get_img_html : function(file){
        return "<img src='" + this.def.img_dir_web + file + "'>";
    },

    create_page : function(str){
        var html = this.util.header_html.load() + str + this.util.footer_html.load();
        this.util.index_html.create()
            .update(html);
    },

    clear : function(){
        setTimeout(function(){
            opclip.create_page("");
        }, this.def.timeout);
    }

};

opclip.main();