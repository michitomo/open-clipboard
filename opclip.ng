/**
 * open-clipboard 0.2.0
 * shares your clipboard through you're local web server.
 *
 * because communicator can't share images.
 *
 * by hinox
 * * * * * */

Object.prototype.def = {
    title : "open-clipboard 0.2.0",

    host_name     : "localhost/",
    document_root : "C:\\webbbb\\",
    page_path     : "",
    index_html    : "index.html",
    clip_img      : "img.png",

    cur_dir       : Main.scriptDirectory + "\\",
    header_html   : "header.html",
    footer_html   : "footer.html",
    on_img        : "on.ico",
    off_img       : "off.ico",

    timeout : 300000 // ms
};

Object.prototype.util = {
    header_html : (new File(this.def.cur_dir + this.def.header_html)),
    footer_html : (new File(this.def.cur_dir + this.def.footer_html)),

    clip : require("Clipboard").Clipboard,
    icon : require("Image").Icon,

    fill_zero : function(num, digit){
        var str = "" + num;
        while(str.length < digit){
            str = "0" + str;
        }
        return str;
    },

    rand_str : function(len, symbols){
        var str = "";
        var list = "0123456789"
            + "abcdefghijklmnopqrstuvwxyz";
        if(symbols){
            list += '!"#$%&\'()-=^~\\|@`[{;+:*]},<.>/?_';
        }
        list.split("");
        for(var i=0; i<len; i++){
            str += list[Math.floor(Math.random() * list.length)];
        }
        return str;
    },

    get_time : function(){
        var t = new Date();
        return this.util.fill_zero(t.getFullYear(),          4)
            + "-" + this.util.fill_zero(t.getMonth() + 1,    2)
            + "-" + this.util.fill_zero(t.getDate(),         2)
            + "_" + this.util.fill_zero(t.getHours(),        2)
            + "-" + this.util.fill_zero(t.getMinutes(),      2)
            + "-" + this.util.fill_zero(t.getSeconds(),      2)
            + "-" + this.util.fill_zero(t.getMilliseconds(), 3);
    }
};

var opclip = {

    status : false,

    on_ico  : this.util.icon.load(this.def.cur_dir + this.def.on_img),
    off_ico : this.util.icon.load(this.def.cur_dir + this.def.off_img),

    main : function(){
        Main.createNotifyIcon();
        Main.notifyIcon.icon = this.off_ico;
        Main.notifyIcon.text = this.def.title;

        var that = this;
        Main.notifyIcon.observe("lbuttonUp", function(){
            that.toggle();
        });

        this.context_menu();
    },

    context_menu : function(){
        var that = this;
        Main.addCommands({
            "オン" : function(){ that.on(); },
            "オフ" : function(){ that.off(); }
        });
        Main.notifyIcon.contextMenu.insert(
            null,
            "オン",
            "オフ",
            null
        );
    },

    toggle : function(){
        if(!this.status){
            this.on();
        }else{
            this.off();
        }
    },

    on : function(){
        Main.notifyIcon.icon = this.on_ico;
        this.status = true;
        this.util.clip.observe("change", this.obs_img);
    },

    off : function(){
        Main.notifyIcon.icon = this.off_ico;
        this.status = false;
        this.util.clip.unobserve("change", this.obs_img);
    },

    obs_img : function(){
        if(this.util.clip.hasFormat("image")){
            var time = this.util.get_time();
            var dir  = opclip.create_dir();
            var html = opclip.get_img_html();
            var img  = this.util.clip.image;

            img.save(this.def.document_root + this.def.page_path + dir.rand  + "\\" + this.def.clip_img
                , {quality : 100});
            free(img);

            Main.notifyIcon.showInfo(time, "IMAGE shared");

            opclip.create_page(dir.rand , html);
            opclip.clear(dir.obj);
            opclip.off();
            this.util.clip.write("text", "http://" + this.def.host_name + this.def.page_path + dir.rand);
        }
    },

    create_dir : function(){
        var rand = this.util.rand_str(16, false);
        var dir = (new Directory(this.def.document_root + this.def.page_path + rand));
        dir.create();
        return {rand : rand, obj : dir};
    },

    create_page : function(rand, str){
        var html = this.util.header_html.load() + str + this.util.footer_html.load();
        var index_html = (new File(this.def.document_root + this.def.page_path + rand  + "\\" + this.def.index_html));
        index_html.create().update(html);
    },

    get_img_html : function(){
        return "<img src='"+ this.def.clip_img +"'>";
    },

    clear : function(dir){
        setTimeout(function(){
            dir.remove();
        }, this.def.timeout);
    }

};

opclip.main();